/* Google Fonts */
    @import url('https://fonts.googleapis.com/css2?family=Roboto&family=Raleway&family=Ubuntu');
/* Fantasy Fonts */
    @font-face {
        src: url('../assets/font/karmatic.ttf');
        font-family: 'lcd';
        /* Formatos compatibles
            otf (open type font)
            ttf (true type font)
            eot (extended open type)
            woff (web open font file)
            svg (scalable vector graphics)
        */
    }
/* General Rules */
    * {
        scroll-behavior: smooth;
        font-family: 'Roboto', 'Raleway', 'Ubuntu', sans-serif;
        box-sizing: border-box;
        /* Explicacion
        CONTENT-BOX
            content-with: width
            final-width: width + padding + border

        BORDER-BOX
            final-width: width
            content-width: width - padding - border
        */
    }
    /* Resets */
    body,
    h1,
    h2,
    h3,
    .menu,
    .unstyled{
        margin: 0;
    }
    .menu,
    .unstyled{
        padding: 0;
    }
    .menu li,
    .unstyled{
        list-style: none;
    }
    nav a,
    footer a{
        text-decoration: none;
    }
    /* Layout */
    nav,
    .flex,
    .social,
    #header,
    #contact,
    .menu{
        display: flex;
    }
    .grid{
        display: grid;
    }
/* Components */
    .btn{
        color: #36c;
        border: .1rem solid #36c;
        background-color: transparent;
    }
    .btn:hover{
        color: #eee;
        background-color: #36c;
    }
/* Headers */
    h1,
    .title{
        font-family: 'lcd';
        font-weight: lighter;
    }
    #header{
        min-height: min(720px,100vh);
        justify-content: center;
        align-items: center;
        flex-wrap: wrap;
        gap: 1rem;
        color: #eee;
        text-shadow: 0 0 .5rem #333;
        padding: 1rem max(1rem, calc(50vw - 480px));
        font-size: min(calc(2vw + .5rem), 2rem);
        background-color: #224;
        background-image: radial-gradient(
            circle,
            rgba(17, 34, 68, .8) 30%,
            rgba(238,238,238,.8) 33%,
            rgba(51,102,204,.8),
            rgba(34,34,68,.8)
        );
    }
    img.logo{
        width: 100%;
        max-width: 420px;
        padding: .5rem;
        background-color: #eee;
        clip-path: polygon(0 25%, 50% 0, 100% 25%, 100% 75%, 50% 100%, 0 75%);
    }
    #header > * {
        flex-grow: 1; /*Crecimiento dentro del contenedor flex*/
        flex-shrink: 0; /*Reduccion dentro del contenedor flex*/
        flex-basis: min(100%, 300px); /* Tamaño Base dentro del contenedor flex*/
    }
/* Navigation */
    nav{
        justify-content: space-between;
        gap: .5rem;
        padding: 1rem;
        background-color: #224;
        background-image: linear-gradient(
            to right,
            #36c, 
            #224
        ); /* COLORES 
            HTML    RGB             HEX
            red     255, 0, 0       f00
            green   0, 255, 0       0f0
            blue    0, 0, 255       00f
            cyan    0, 255, 255     0ff
            magenta 255, 0, 255     f0f
            yellow  255, 255, 0     ff0
            black   0, 0, 0         000
            white   255, 255, 255   fff
            gray    128, 128, 128   888
        */
    }
    nav a{
        color: #ccc;
    }
    nav a.active,
    nav a:hover{
        color: #fff;
        text-shadow: 0 0 .25rem; /* -x+ -y+ blur color */
    }
    .logo{
        font-family: 'lcd', 'lucida console', sans-serif;
        text-transform: uppercase;
    }
    .menu{
        justify-content: center;
        flex-wrap: wrap;
        gap: 1rem;
    }
    /* UNIDADES 
        Absolutas: Son aquellas que siempre valen lo mismo indistintamente del medio en el que se reproduzcan. Se utilizan principalmente para establecer limites.
            distancia: cm, mm, m, in
            tipografia: pt(1/72in), pc(1/6in)
            hibrida: px(1/96in) depende de la resolucion

        Relativas: Son aquellas toman como referente a otro elemento, siendo este generalmente su contenedor. Se utilizan para definir tamaños de caja y tipografias
            tamaño: % del contenedor
            tipografia: em(ancho "M"), ex(alto "x"), ch(ancho "0"), %
            hibrida: rem(ROOT em) su referente es <HTML>

        Flexibles: Son aquellas que basan su tamaño en las dimensiones del viewport (ventana del navegador). Se utilizan principalmente para tipografia flexible y establecer alturas.
            tamaño: vh, vw;
            dimension: vmin, vmax; 
    */
/* Content */
    section > p:first-of-type::first-letter{
        float: left;
        margin-right: .25rem;
        line-height: 2rem;
        font-size: 2.5rem;
        font-weight: bold;
    }
    .auto{
        grid-template-columns: repeat(auto-fit, minmax(min(100%,300px),1fr));
        gap: 1rem;
        padding: 1rem;
        /*  EXPLICACION:
            repeat(cantidad, valor) crea la cantidad de columnas especificadas con el tamaño indicado
            
            - auto-fill: rellena con la cantidad de celdas posibles, siempre respetando el tamaño
            - auto-fit: coloca la celdas para que cubran todo el espacio del contenedor, adaptando el tamaño,

            minmax(a,b) establece los tamaños minimos y maximos
        */
    }
    .card{
        border-radius: .25rem;
        padding: 1rem;
        background: linear-gradient(#eee, transparent);
        box-shadow: -.2rem .2rem .25rem .2rem #66c4;
        overflow: hidden;
    }
    .card header{
        margin: -1rem -1rem 1rem;
        padding: 1rem;
        color: #eee;
        text-shadow: 0 0 .5rem #333;
    }
    .card:nth-child(odd) header{
        background-color: #c36;
    }
    .card:nth-child(even) header{
        background-color: #448;
    }
    .card:first-child header{
        background-color: #d82;
    }
    .card:last-child header{
        background-color: #333;
    }
/* About */
/*  
        Psedoclases: Instancia o caracteristica de un elemento
            :hover cuando flotamos el mouse por encima
            :focus  cuando enfocamos el elemento para una accion
            :first-of-type corresponde a la primera aparicion de la etiqueta
            :last-of-type corresponde a la ultima aparicion de la etiqueta
            :first-child cuando corresponde al primer hijo de un contenedor
            :nth-child() numero de hijo contando desde el principio
            :nth-last-child() numero de hijo contando desde el final
            :last-child cuando corresponde al ultimo hijo de un contenedor
    
        PseudoElementos: Parte o elemento dentro de una etiqueta
            ::before contenido antes del contenido
            ::after contenido despues del contenido
            ::first-letter Primera letra de un contenedor
            ::first-line primera linea de un contenedor
    */
/* Footer */
    /* Contact Form */
        #contact{
            flex-direction: column;
            max-width: 540px;
            margin: 1rem auto;
            padding: 1.5rem;
        }
        #contact label{
            margin-top: .5rem;
        }
        input,
        select,
        textarea,
        button{
            outline: none;
            border-radius: .25rem;
            border: .1rem solid #224;
            padding: .5rem 1rem;
            font-size: 1rem;
        }
        textarea{
            min-height: 5rem;
            resize: vertical;
        }
        #contact button{
            margin-top: .25rem;
            margin-left: auto;
            text-transform: uppercase;
        }
        .validation{
            max-height: 0;
            overflow: hidden;
            font-size: .8rem;
        }
        /* Visual validation */
        #contact :focus{
            box-shadow: 0 0 .5rem #2248;
        }
        #contact :focus + .validation{
            max-height: 640px;
            padding: .25rem .2rem;
        }
        #contact :not(button):valid{
            border-color: #284;
            box-shadow: 0 0 .2rem #3c6;
        }
        #contact :not(button):valid + .validation{
            color: #284;
        }
        #contact :not(:placeholder-shown):invalid{
            border-color: #c33;
            box-shadow: 0 0 .2rem #c33;
        }
        #contact :not(:placeholder-shown):invalid + .validation{
            color: #c33;
        }
    /* Social Media */
    .social{
        max-width: 720px;
        justify-content: center;
        flex-wrap: wrap-reverse;
        gap: .5rem;
        margin: auto;
        padding: 1rem;
    }
    .social a{
        width: 4rem;
        height: 4rem;
        border-radius: .5rem;
        background-color: #ccc;
        background-position: center;
        background-size: 2.25rem;
        background-repeat: no-repeat;
        transition: all .25s ease;
    }
    .social a:hover{
        background-color: #eee;
        background-size: 3rem;
        box-shadow: 0 .2rem .4rem #333;
    }
    /* Social media icons */
    .facebook{
        background-image: url('../assets/icon/facebook.svg');
    }
    .instagram{
        background-image: url('../assets/icon/instagram.svg');
    }
    .whatsapp{
        background-image: url('../assets/icon/whatsapp.svg');
    }
    .linkedin{
        background-image: url('../assets/icon/linkedin.svg');
    }
    .youtube{
        background-image: url('../assets/icon/youtube.svg');
    }
    .twitter{
        background-image: url('../assets/icon/twitter.svg');
    }
    .github{
        background-image: url('../assets/icon/github.svg');
    }