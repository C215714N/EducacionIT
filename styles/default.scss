// Importaciones
@use "sass:string"; // Funciones de Texto
@use "sass:math"; // Funciones Matematicas

// Declaraciones
$path: "../assets/bg";
$linux-bg:
    "artful-aardvark",
    "bionic-beaver",
    "cosmic-cuttlefish",
    "disco-dingo",
    "eoan-ermine",
    "focal-fossa",
    "groovy-gorilla",
    "hisurte-hippo",
    "impish-Indri",
    "jammy-jellyfish",
;
$social:
    "cr",
    "facebook",
    "github",
    "instagram",
    "linkedin",
    "twitter",
    "whatsapp",
    "youtube",
;
$media-screen:
    '' 0,
    -sm 576px,
    -md 768px,
    -lg 992px,
    -xl 1200px,
    -xxl 1400px,
;
$grid-areas: '#header', '#root', '#footer', '#nav';
$areas: 
    ('header' 'main' 'footer' 'nav', 0), 
    ('nav' 'header' 'main' 'footer',  768px);
$colors:
    first   var(--bs-indigo),
    second  var(--bs-gray-100),
    third   var(--bs-gray-900),
;
$color-props:
    text    color,
    bg      background-color,
    border  border-color,
    shadow  --shadow,
    shade   --shade
;
// Mixins
// Implementacion de Media Queries por Tama√±o
@mixin media($class, $attr, $value, $size: 0){
    @if $size < 576px{
        #{$class}{ #{$attr}: $value; } }
    @else {
    @media screen and (min-width: $size){
        #{$class}{ #{$attr}: $value; }   
    } }
}
@for $i from 1 through length($grid-areas){
    $area: nth(nth($areas, 1), 1); // Obtengo la lista de areas
    $n: string.unquote(nth($area, $i)); //Extraigo el nombre sin comillas
    @include media(nth($grid-areas, $i), grid-area, $n, 0)
}
@each $area, $size in $areas{
    @include media(body, grid-template-areas, $area, $size);
}
@each $vn, $vw in $media-screen{
@each $prop, $attr in $color-props{
@each $name, $value in $colors{
    @include media('.'+$prop+$vn+'-'+$name, $attr, $value, $vw);
} } }
// Nesting
#header{

}
#nav{
    @extend .bg-third;
    a{
        @extend .text-second;
    }
}
#root{

}
#footer{
    @extend .text-second, .bg-third;
    padding: 0 calc(50vw - 660px);
    .map{
        min-height: 320px;
    }
}

.gallery{
    position: relative;
    min-height: min(640px, 100vh);
    &-item{
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: var(--color) var(--bg) center/cover;
        opacity: 0;
        &.active{
            opacity: 1;
        }
        @for $i from 1 through length($linux-bg){
            &:nth-child(#{$i}n){
                --color: hsl(#{$i * 30deg}, 50%, 50%);
                --bg: url("#{$path}/ubuntu-#{nth($linux-bg, $i)}.jpg");
            }
        }
    }
    button{
        position: absolute;
        top:0;
        bottom: 0;
        border: none;
        background-color: transparent;
        &.icon-prev{
            left: 0;
            padding: 3rem;
        }
        &.icon-next{
            right: 0;
            padding: 3rem;
        }
    }
}