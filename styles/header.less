// Variables: Valores que se almacenan en la memoria y pueden cambiar
    // Colores
    @color: var(--light);
    @bg: var(--first);
    @gradient: linear-gradient(var(--first), var(--dark));
    // Tamaños para tipografia
    @min: .5rem;
    @mid: 2vw;
    @max: 5rem;
    // Dimensiones
    @full: calc(100vw - 2rem);
    @responsive: ~'min(calc(100vw - 660px), 1rem)';
    @col: 24;
    // Tamaños de Pantalla
    @sm: 576px;
    @md: 768px;
    @lg: 992px;
    @xl: 1200px;
    // Imagenes
    @path: '../assets/bg';
    @osx: 
        'osx-catalina-night.jpg',
        'osx-catalina.jpg',
        'osx-el-capitan.jpg',
        'osx-high-sierra.jpg',
        'osx-leopard.jpg',
        'osx-lion.jpg',
        'osx-mavericks.jpg',
        'osx-mojave-night.jpg',
        'osx-mojave.jpg',
        'osx-monterrey-dark.jpg',
        'osx-monterrey-light.jpg',
        'osx-mountain-lion.jpg',
        'osx-sierra.jpg',
        'osx-snow-leopard.jpg',
        'osx-tiger.jpg',
        'osx-yosemite.jpg';;
    @ubuntu:
        'ubuntu-artful-aardvark.jpg',
        'ubuntu-bionic-beaver.jpg',
        'ubuntu-cosmic-cuttlefish.jpg',
        'ubuntu-disco-dingo.jpg',
        'ubuntu-eoan-ermine.jpg',
        'ubuntu-focal-fossa.jpg',
        'ubuntu-groovy-gorilla.jpg',
        'ubuntu-hisurte-hippo.jpg',
        'ubuntu-impish-Indri.jpg',
        'ubuntu-jammy-jellyfish.jpg';

// Nesting: Anidacion de selectores y reglas que compila selectores especificos
#header{  
    .position;
    .flexbox(@ai: center);
    color: @color;
    background: @bg @gradient;
    overflow: hidden;
    @media screen and (min-width: @lg){
        .sizes(@h: 100vh);
    }
    // Imagen Estilos Retrato
    .portrait{
        .normalize(.5rem; 1rem; .2rem solid var(--second));
        &:extend(.r-portrait);
        border-radius: 50%;
        background-color: @color;
        opacity: .8;
        animation: appearFromLeft 2s ease-out .5s;
        animation-fill-mode: backwards;
    }
    // Cabecera Introduccion
    .header{
        .normalize(@p: 1rem);
        .sizes(@max * 8; @h: auto);
        .fontsize(@min, @max / 2, @mid);
        text-shadow: 0 0 .5rem var(--dark);
        animation: appearFromRight 2s ease-out .5s;
        animation-fill-mode: backwards;
    }
}
main{
    section{
        min-height: min(100vh, 640px);
        padding: 1rem;
        .colors(4);
        .header{
            .normalize(-1rem -1rem 1rem, .5rem @responsive);
            background: var(--bg);
        } 
    } 
    .osx-bg{
        background: var(--bg) center/cover;
        .bg(@osx);
    }
    .ubuntu-bg{
        background: var(--bg) center/cover;
        .bg(@ubuntu);
    }
}

// Mixins: Selectores que se aplican como reglas de estilo;
.zeroise{
    .normalize;
}
.unstyled{
    list-style: none;
    text-decoration: none;
}
.cover{
    .position(absolute; @z: -1);
    .sizes;
    opacity: .5;
    object-fit: cover;
}
.r-portrait{
    .sizes(@max * 4; @max * 4; @full; @full);
}

// Mixins Parametricos: Estilos que reciben argumentos para aplicar reglas
.normalize(@m: 0; @p: 0; @b: 0){
    margin: @m;
    border: @b;
    padding: @p;
}
.flexbox(
    @fd: row;  
    @jc: center;
    @ai: stretch;
    @fw: wrap;
    @d: flex
){
    display: @d;
    flex-direction: @fd;
    justify-content: @jc;
    align-items: @ai;
    flex-wrap: @fw;
}
.position(@p:relative; @x:0; @y:0; @z:0; @x-axis:left; @y-axis:top){
    position: @p;
    @{x-axis}: @x;
    @{y-axis}: @y;
    z-index: @z;
}
.sizes(@wmax: unset; @hmax: unset; @w: 100%; @h: 100%){
    max-width: @wmax;
    max-height: @hmax;
    width: @w;
    height: @h;
}
.fontsize(@min; @max; @mid){
    font-size: ~'min(calc(@{mid} + @{min}), @{max})';
}

// Mixins Recursivos: Estilos que se repiten en base a una condicion
/* Sistema de Grillas */
.grid(@i:1) when(@i <= @col){
    .col-@{i}{
        width: percentage( (@i/@col) );
    }
    .grid(@i + 1);
}
.grid;
// Colores de Cabeceras
.colors(@total; @i: 1) when (@i <= @total){
    &:nth-child(@{i}n){
        --bg: radial-gradient(
            circle at top left,
            hsl(@i * (270/@total), 50%, 60%),
            hsl(@i * (90/@total), 50%, 40%)
        );
    }
    .colors(@total, @i + 1);
}
// Imagenes Galeria
.bg(@array; @i: 1) when (@i <= length(@array)){
    @img: extract(@array, @i);
    &:nth-child(@{i}n){
        --bg: url('@{path}/@{img}');
    }
    .bg(@array; @i + 1);
}
@import url('background.less');