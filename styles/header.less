// Variables
	@color: #448;
	@bg_color: #ccc;
	@r: .25rem;
	@col: 24;
	@path: '../assets/bg';
	@bg_day:
		'osx-bigsur-day.jpg',
		'osx-catalina-day.jpg',
		'osx-leopard-day.jpg',
		'osx-mojave-day.jpg';
	@bg_night:
		'osx-bigsur-night.jpg',
		'osx-catalina-night.jpg',
		'osx-leopard-night.jpg',
		'osx-mojave-night.jpg';

// Nesting: anidacion de selectores;
	#header{
		.flexbox(column);
		.position;
		.normalize(@p: 1rem);
		height: min(100vh, 640px);
		.header{
			font-size: ~'min(calc(2vw + .5rem), 3rem)';
			text-align: center;
			color: lighten(@bg_color, 20%);
			text-shadow: 0 0 calc(1vw + .5rem) darken(@color, 10%);
			*{ &:extend(.unstyled); }
		}
		.controls{
			.flexbox;
			span{
				width: 1rem;
				height: 1rem;
				.normalize(.25rem);
				border-radius: .5rem;
				background-color: #eee;
				box-shadow: 0 .25rem .5rem #333;
				transition: all .5s ease-out;
				&.active{ width: 3rem; }
			}
		}
		.slide{
			&:extend(.unstyled);
			&:extend(.cover);
			li{
				&:extend(.cover);
				background: var(--bg) center/cover;
				opacity: 0;
				transition: all 2s ease-in;
				.bg(@bg_day);
				&.active{ opacity: 1; }
			}
		}
		button{	
			.position(absolute; @p2:bottom);
			.normalize(@p:1rem);
			color: @bg_color;
			background-color: transparent;
			font-size: calc(1vw + 1rem);
			&.icon-prev{ left:0; }
			&.icon-next{ right:0; }
		}
	}
	#header.dark{
		.slide li{
			.bg(@bg_night);
		}
	}
//	Mixin: estilos que se utilizan como atributos;
	.unstyled{ 
		.normalize;
		list-style: none; 
	}
	.rounded(){
		-webkit-border-radius: @r;
		-moz-border-radius: @r;
		-ms-border-radius: @r;
		-o-border-radius: @r;
		border-radius: @r;
	}
	.cover{
		.position(absolute; @z:-1);
		width: 100%;
		height: 100%;
	}
//	Mixin Parametrico: estilo que recibe parametros como una funcion
	.normalize(@m:0; @p:0; @b:0){
		margin: @m;
		border: @b;
		padding: @p;
	}
	.flexbox(
		@fd: row;
		@fj: center;
		@fa: stretch;
		@fw: wrap;
		@f: flex
		){
		display: @f;
		flex-direction: @fd;
		justify-content: @fj;
		align-items: @fa;
		flex-wrap: @fw;
	}
	.position(@p: relative; @y:0; @x:0; @z:0; @p1: top; @p2: left){
		position: @p;
		@{p1}: @y;
		@{p2}: @x;
		z-index: @z;
	}
//	Mixin Recursivo: estilo que se repite en base a una condicion
	.bg(@array; @i:1) when (@i <= length(@array)){
		@bg: extract(@array, @i);
		&:nth-child(@{i}){ --bg: url('@{path}/@{bg}'); }
		.bg(@array; @i + 1);
	}
	.grid(@i: 1) when (@i <= @col){
		.col-@{i}{ width: percentage( (@i / @col) ); }
		.grid(@i + 1);
	} 
/* Sistema de grillas (Flexbox)*/
	.grid;