// Variables
	@color: #248;
	@bg-color: #c24;
	@mixed: @color * @bg-color;
	@r: 1rem;
	@path: '../assets/background';
	@bg_day:
		'macos-bigsur-day.jpg',
		'macos-monterrey-day.jpg',
		'osx-bigsur-day.jpg',
		'osx-catalina-day.jpg',
		'osx-leopard-day.jpg',
		'osx-mojave-day.jpg';
	@bg_night:
		'macos-bigsur-night.jpg',
		'macos-monterrey-night.jpg',
		'osx-bigsur-night.jpg',
		'osx-catalina-night.jpg',
		'osx-leopard-night.jpg',
		'osx-mojave-night.jpg';
	@col: 24;	
// Nesting (Anidacion de estilos)
/*Cabecera*/
	#header{
		height: 100vh;
		max-height: 720px;
		.position;
		.flexbox(column);
		.normalize(@p:1rem);
		color:@mixed;
		.header *{
			&:extend(.zeroise);
		}
		.slide{
			&:extend(.unstyled);
			&:extend(.cover);
			&:extend(.zeroise);
			li{
				&:extend(.cover);
				opacity: 0;
				background: var(--bg) center/cover no-repeat;
				.bg(@bg_day);
				&.active{ opacity: 1 }
			}
		}
		button{
			@r: .25rem;
			.rounded;
			.normalize(@p:1rem);
			.position(absolute,@px:bottom);
			color: @color;
			background-color: transparent;
			&.icon-prev{ left: 0; }
			&.icon-next{ right:0; }
		}
	}
	#mode:checked {
		& ~ #header li{
			.bg(@bg_night);
		}
	}
// Mixins (Estilos anidables como atributos)
/*Helpers*/
	.unstyled{
		list-style: none;
	}
	.zeroise{
		.normalize;
	}
	.rounded{
		border-radius:@r;
		-o-border-radius:@r;
		-ms-border-radius:@r;
		-moz-border-radius:@r;
		-webkit-border-radius:@r;
	}
	.cover{
		.position(absolute; @z:-1);
		width: 100%;
		height: 100%;
	}
// Mixins Parametricos (Estilos que reciben valores - funcion)
	.normalize(@m:0; @p:0; @b:0){
		margin: @m;
		border: @b;
		padding: @p;
	}
	.flexbox(
		@fd: row;
		@fj: center;
		@fa: stretch;
		@fw: wrap;
		@f: flex
		){
		display: @f;
		flex-direction: @fd;
		justify-content: @fj;
		align-items: @fa;
		flex-wrap: @fw;
	}
	.position(@p:relative; @x: 0; @y:0; @z: 0; @px:left; @py: top){
		position: @p;
		@{py}:@y;
		@{px}:@x;
		z-index: @z;
	}
// Mixins Recursivos: Estilos que se repiten en base a una condicion;
	// Imagenes de Fondo
	.bg(@array, @i:1) when(@i <= length(@array)){
		@bg: extract(@array, @i);
		&:nth-child(@{i}){
			--bg: url('@{path}/@{bg}');
		}	.bg(@array, @i + 1);
	}
	// Sistema de Grillas
	.grid(@i:1) when(@i <= @col){
		.col-@{i}{
			width: percentage((@i / @col));
		}	.grid(@i + 1);
	}
	// aplicacion del mixin
	.grid;