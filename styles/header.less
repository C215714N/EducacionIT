//	Variables: dato que se almacenan en memoria y cuyo valor puede cambiar;
	@light: #eee;
	@dark: #333;
	@letter: 1rem;
	@r: (@letter/4);
	@col: 24;
	@path: '../assets/bg';
	@backgrounds:
		'osx-yosemite.jpg',
		'osx-el_capitan.jpg',
		'osx-sierra.jpg',
		'osx-high_sierra.jpg';
//	Nesting: selectores que se utilizan dentro en forma de cascada;
	#header{
		.flexbox(column);
		.normalize(@p:1rem);
		.fontsize;
		position: relative;
		min-height: min(100vh, 640px);
		color: @light;
		text-shadow: 0 0 min(2vw) @dark;
		.header{
			h1,
			p{
				&:extend(.zeroise);
			}
		}
		.control{
			.flexbox;
			span{
				.normalize(.25rem; .5rem; 1px solid);
				.transition;
				min-width: 1rem;
				border-radius: .5rem;
				background-color: @light;
				box-shadow: -.2rem .2rem .2rem @dark;
				&.active{ min-width: 3rem; }
			}
		}
		.slide{
			&:extend(.zeroise);
			&:extend(.unstyled);
			li{
				&:extend(.cover);
				.background(@backgrounds);
				.transition(2s; ease-in; 0);
				opacity: 0;
				&.active{ opacity: 1; }
			}
		}
		button{
			&:extend(.unstyled);
			.normalize(@p:~'min(50%, 300px)' 1rem 1rem);
			.fontsize(@min2: 1.5rem);
			.position(absolute; @xa: bottom);
			color: @light;
			&.icon-prev{left:0;}
			&.icon-next{right:0;}
		}
	}
	.less{
		.flexbox;
		.normalize(.5rem 1rem; .5rem);
		div{
			.normalize(0; 1rem; .1rem dashed);
		}
	}
//	Mixins: estilos que se utilizan como atributos;
	.zeroise{ .normalize; }
	.unstyled{
		list-style: none;
		text-decoration: none;
		background-color:transparent;
	}
	.rounded{
		-webkit-border-radius:@r;
		-moz-border-radius:@r;
		-ms-border-radius:@r;
		-o-border-radius: @r;
		border-radius:@r;
	}
	.cover{
		.position(absolute; @z: -1);
		width: 100%;
		height: 100%;
	}
//	Mixins parametricos: estilos que reciben parametros para definir valores;
	.normalize(@m:0; @p:0; @b:0){
		margin: @m;
		border: @b;
		padding: @p;
	}
	.fontsize(@min1: 2vw, @min2: .8rem, @max: 5rem){
		font-size: ~'min(calc(@{min1} + @{min2}), @{max})';
	}
	.flexbox(
		@fd: row;
		@fj: center;
		@fa: stretch;
		@fw: wrap;
		@f: flex
	){
		display: @f;
		flex-direction: @fd;
		justify-content: @fj;
		align-items: @fa;
		flex-wrap: @fw;
	}
	.position(@p: relative; @x:0; @y:0; @z:0; @xa:left; @ya:top){
		position: @p;
		@{ya}: @y;
		@{xa}: @x;
		z-index: @z;
	}
	.transition(@s: 1s; @t:ease; @d:.2s; @p: all){
		transition-property: @p;
		transition-duration: @s;
		transition-timing-function: @t;
		transition-delay: @d;
	}
//	Mixins Recursivos: estilos que se repiten en base a una condicion;
	.background(@array; @i: 1) when (@i <= length(@array)){
		@bg: extract(@array, @i);
		&:nth-child(@{i}){
			background: hsl(@i * 30, 50%, 50%) url('@{path}/@{bg}') center/cover;
		}
		.background(@array; @i + 1);
	}
	//	sistema de grillas
	.grid(@i:1) when (@i <= @col){
		.col-@{i}{
			width: percentage( (@i / @col) );
		}
		.grid(@i + 1);
	}
	/* Sistema de grillas - basico */
	.grid; // aplicacion del MIXIN
// 	Imports
	@import url('global.css');
	@import url('animation.less');