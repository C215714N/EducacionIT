// Variables
	//colors
		@color: #248;
		@bg-color: #ccc;
	//breakpoints
		@sm:576px; @smw:540px;
		@md:768px; @mdw:720px;
		@lg:992px; @lgw:960px;
		@xl:1200px;	@xlw:1140px;
	//columns
		@col: 24;
	//background
		@icons: '../assets/icon';
		@images: '../assets/img';
		@background: 	
			'osx-high-sierra.jpg'
			'osx-leopard.png'
			'osx-lion.png'
			'osx-mavericks.png'
			'osx-mojave-night.jpg'
			'osx-mojave.jpg'
			'osx-mountain-lion.jpg'
			'osx-sierra.jpg'
			'osx-snow-leopard.png';

// Reglas generales
	@import url(icomoon.css);
//Estilos compuestos: Los selectores se gereran automaticamente a partir de la anidacion;
	*{
		box-sizing: border-box;
		font-family: sans-serif;
		outline: none;
		transition: all 1s ease;
	}
	body{ .normalize; }
	nav{
		.flexbox(@fj:space-between; @fa: center);
		background-color: @bg-color;
		a{
			display: block;
			padding:.5rem;
			color:@color;
			text-decoration: none;
		}
		#menu{
			.button;
			&:hover{
				.button-press;
			}
			@media screen and (min-width: @md){
				display: none;
			}
		}
		.menu{
			list-style:none;
			overflow: hidden;
			width:100%;
			height: 0;
			a:hover{
				background-color:darken(@bg-color, 5%);
			}
			.normalize;
			@media screen and (min-width: @md){
				width:auto;
				height: auto;
				.flexbox;
				span{
					display: none;
				}
			}
			@media screen and (min-width: @lg){
				span{
					display: inline-block;
				}
			}

		}
		.openMenu{
			height: 8.5rem;
			@media screen and (min-width: @md){
				height: auto;
			}
		}
	}
	#header{
		padding:1rem;
		height: 100vh;
		position: relative;
		.slide{
			.normalize;
			list-style:none;
			position: absolute;
			top: 0;
			left: 0;
			width:100vw;
			height: 100vh;
			z-index: -1;
			li{
				.normalize;
				opacity: 0;
				position:absolute;
				top: 0;
				left: 0;
				z-index: -1;
				width:100vw;
				height: 100vh;
				background-position: center;
				background-size: cover;
				//mixins nth-child
				.carousel(@i:1) when (@i <= length(@background)){
					@bg: extract(@background, @i);
					&:nth-child(@{i}){
						background-image: url('@{images}/@{bg}');
					}
					.carousel(@i + 1);
				}
				.carousel;
			}
			.active{
				opacity: 1;
			}
		}
	}
	main{
		display: grid;
		grid-template-areas: 
			'aside section-a section-a'
			'aside section-b section-b';
		gap:1rem;
		section{
			.mediaQuery(@md);
			&:first-child{
				grid-area: aside;
			}
			&:last-child{
				grid-area: section-b;
			}
		}
	}
	footer{
		color:@color;
		background-color: @bg-color;
		#contact{
			.mediaQuery(@md);
			.mediaQuery(@lg);
			padding:1rem;
			.flexbox(column; @fw:no-wrap);
			input , textarea{
				width:100%;
				.normalize;
				padding:.5rem 1rem;
				resize: none;
				// Selector elemento Padre
				& + .validate{
					overflow: hidden;
					height: 0;		
				}
				&:focus + .validate{
					height: auto;
					padding:.5rem;
					background-color:darken(@bg-color, 10%);
				}
			}
			button{
				.button;
				&:hover{
					.button-press;
				}
			}
		}
	}

// Mixins: Estilos que se aplican a los selectores en donde se implementen;
	.normalize(){
		margin:0;
		padding:0;
		border:0;
	}
	.button(){
		padding:.5rem 1rem;
		border:.2rem solid lighten(@bg-color, 5%);;
		color:lighten(@bg-color, 5%);
		background-color: darken(@bg-color, 30%);
	}
	.button-press(){
		padding:.5rem 1rem;
		color: darken(@bg-color, 30%);
		background-color: lighten(@bg-color, 5%)
	}
// Mixins Parametricos:;
	.flexbox(@fd:row ; @fj:center ; @fa:flex-start ; @fw:wrap ; @d:flex){
		display: @d;
		flex-direction: @fd;
		justify-content: @fj;
		align-items: @fa;
		flex-wrap: @fw;
	}
// Conditional Template
	.mediaQuery (@vw){
		@media screen and (min-width: @vw){
			max-width: 
				if( @vw = @sm , @smw,
				if( @vw = @md , @mdw,
				if( @vw = @lg , @lgw,
					@xlw
				)));
		} 
	}
// Mixins Recursivos
	.grid (@n ; @i: 1) when (@i <= @n) {
		.col-@{i}{
			width: percentage(@i / @n);
		}
		.grid(@n ; @i + 1);
	}
	.grid(@col);

	// sistema de grillas responsive
		.crisTrap (@vn ; @vw){
			@media screen and (min-width: @vw){
				.grid(@i: 1) when (@i <= @col){
					.col-@{vn}-@{i}{
						width: percentage(@i / @col);
					}
					.grid (@i + 1);
				}
				.grid;
			}
		}
		.crisTrap(sm;@sm);
		.crisTrap(md;@md);
		.crisTrap(lg;@lg);
		.crisTrap(xl;@xl);