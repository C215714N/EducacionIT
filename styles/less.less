// Variables: Valor que se almacena en la memoria y que puede cambiar;
	// Colores
		@first: #448;
		@second: #36c;
		@light: var(--light);
		@dark: var(--dark);
	// Unidades
		@sm: 576px; 
		@md: 768px;
		@lg: 992px;
		@xl: 1200px;
		@xxl: 1400px;
		@r: .25rem;
		@col: 24;
	// Multimedia
		@path: '../assets/backgrounds';
		@parallax: 
			'macos-bigsur-day.jpg',
			'macos-bigsur-night.jpg',
			'macos-monterrey-day.jpg',
			'macos-monterrey-night.jpg';
		@backgrounds: 
			'osx-leopard-day.jpg',
			'osx-mojave-day.jpg',
			'osx-catalina-day.jpg',
			'osx-bigsur-day.jpg',
			'osx-leopard-night.jpg',
			'osx-mojave-night.jpg',
			'osx-catalina-night.jpg',
			'osx-bigsur-night.jpg';
// Nesting: Capacidad de generar selectores dentro de las reglas;
/*Main Header Styles*/
	#header{
		.normalize(@p:1rem);
		.position;
		.flexbox(column; @fa: center);
		height: min(100vh, 720px);/*viewport height: altura de la ventana*/
		color: @light;
		text-shadow: 0 0 .5rem @dark;
		text-align: center;
		font-size: ~'min(calc(2vw + .8rem), 5rem)'; /*viewport width: ancho de la ventana*/
		// Heading Styles
			.header{
				*{ &:extend(.unstyled); }
			}
		// Slide Gallery
			.slide{
				&:extend(.unstyled);
				&:extend(.cover);
				li{
					&:extend(.cover);
					&:extend(.show);
					background: var(--bg) center/cover;
					.bg(@backgrounds);
					opacity: 0;
					&.active{ opacity: 1; }
				}
			}
		// Slide Controls
			.control{
				.flexbox;
				span{
					@r: 1rem;
					&:extend(.show);
					width: @r;
					height: @r;
					margin: (@r / 2);
					border-radius: @r;
					background-color: @light;
					box-shadow: 0 0 .5rem @dark;
					&.active{
						width: @r * 3;
					}
				}
			}
			button{
				.normalize(@p:1rem);
				color: @light;
				background-color: transparent;
				font-size: ~'min(calc(2vw + .8rem), 5rem)';
				.position(absolute; @px:bottom);
				&.icon-prev{ left: 0; }
				&.icon-next{ right: 0; }
			}
	}
// Mixins: Estilos declarados utilizados como reglas de un selector ;
	.unstyled{
		.normalize;
		outline: none;
		list-style: none;
		text-decoration: none;
	}
	.cover{
		.position(absolute);
		width: 100%;
		height: 100%;
		z-index: -1;
	}
	.show{
		transition-property: all;
		transition-duration: 1s;
		transition-timing-function: ease-out;
		transition-delay: .2s;
	}
	.flex{ .flexbox(@fj: flex-start); }
// Mixins parametricos: Estilos que reciben valores para ser aplicados (Funciones);
	.normalize(@m:0; @p:0; @b:0){
		margin: @m;
		border: @b;
		padding: @p;
	}
	.position(@p: relative; @x:0; @y:0; @px:left; @py:top){
		position: @p;
		@{px}: @x;
		@{py}: @y;
	}
	.flexbox(
		@fd: row;
		@fj: center;
		@fa: unset;
		@fw: wrap;
		@f: flex
	){
		display: @f;
		flex-direction: @fd;
		justify-content: @fj;
		align-items: @fa;
		flex-wrap: @fw;
	}
// Mixins Recursivos: Estilos que se repiten en base a una condicion (Bucles);
	// Multiple Backgrounds
		.bg(@images; @i:1) when (@i <= length(@images)){
			@bg: extract(@images, @i);
			&:nth-child(@{i}n){ 
				--bg: url('@{path}/@{bg}'); 
			}
			.bg(@images; @i + 1);
		}
	/*Flexbox Grid System*/
		.flexgrid(@i:1) when (@i <= @col){
			.col-@{i}{
				width: percentage((@i / @col));
				border: .1rem dashed @dark;
			}
			.flexgrid(@i + 1);
		}
		.flexgrid;
	/*Responsive Grid System*/
		.media(@vn, @vw){
			@media screen and (min-width: @vw){
				.grid(@i:1) when (@i <= @col){ .col-@{vn}-@{i}{ width: percentage((@i / @col)); }
				.grid(@i + 1);
			}	.grid;
		}	}
		.media(sm; @sm);
		.media(md; @md);
		.media(lg; @lg);
		.media(xl; @xl);
		.media(xxl; @xxl);
