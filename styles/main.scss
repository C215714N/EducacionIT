@use 'sass:math';
//Variables
	$icons: '../assets/icon';
	$social:
		'css',
		'facebook',
		'github',
		'instagram',
		'linkedin',
		'twitter',
		'whatsapp',
		'youtube';
	$attribs:
		text color,
		bg background-color,
		border border-color;
	$colors: 
		primary 	#448,
		secondary 	#ccc,
		light 		#eee,
		dark 		#333,
		info 		#36c,
		warning 	#db2,
		danger 		#c33,
		success 	#3c6;
	$media:
		sm 576px,
		md 768px,
		lg 992px,
		xl 1200px;
	$cols: 24;
// Loops 
	//each
	@each $ico in $social{
		.#{$ico}{
			background-image: url("#{$icons}/#{$ico}.svg");
	}	}
	// nested each
	@each $prop, $attr in $attribs{
		@each $cname, $cval in $colors{
			.#{$prop}-#{$cname}{
				#{$attr}: $cval;
	}	}	}
	//each for (i = 1; i <= cols; i ++)
	@each $vn, $vw in $media{
		@media screen and (min-width: $vw){
			@for $i from 1 through $cols{
				.col-#{$vn}-#{$i}{
					width: percentage( $i / $cols );
	}	}	}	}
//Mixins
@mixin normalize(
	$m:0, $p:0, $b:none, $o:none, 
	$ba: border, $ma: margin, $pa: padding, $oa: outline
	){
	#{$ma}: $m;
	#{$oa}: $o;
	#{$ba}: $b;
	#{$pa}: $p;
}
@mixin background($bs: cover, $bp: center, $ba: scroll, $br: no-repeat){
	background-size: $bs;
	background-position: $bp;
	background-attachment: $ba;
	background-repeat: $br;
}
/*Hidden Style*/
	%icon{
		display: inline-block;
		width: 5rem;
		height: 5rem;
		opacity: .5;
		@include background(2.5rem);
		&:hover{ background-size: 4rem }
		&:active{ opacity: .8 }
	}
	%scale{
		transform: scale(1.1);
	}
//Nesting
	#header{
		@extend .text-light;
		text-shadow: 0 0 .5rem #333;
		text-align: center;
		button{
			@extend .text-light;
		}
		span{
			display: inline-block;
			border-radius: 1rem;
			width: 1rem;
			height: 1rem;
			@extend .bg-light;
			&.active{ width: 3rem}
		}
		.slide li{  
			opacity: 0; 
			&.active{ opacity: 1 }
	}	}
	main a.back{ @extend %icon; }
	.social{
		display: flex;
		max-width: 540px;
		@include normalize(.5rem auto, .5rem);
		a{ @extend %icon; }
	}
	#contact{
		@include normalize(1rem auto, .5rem);
		@media screen and (min-width: 576px){ max-width: 540px }
		@media screen and (min-width: 768px){ max-width: 720px }
		input, 
		textarea{
			@include normalize(0, .5rem 1rem, .1rem solid transparent);
			&:focus{ 
				@extend %scale;
				@extend .border-dark;
				&:valid{ @extend .border-success;
					& + .valid{ @extend .bg-success;} }
				&:not(:placeholder-shown):invalid{ @extend .border-danger;
					& + .valid{ @extend .bg-danger; } }
				& + .valid{	
					@include normalize($p: .5rem); 
					@extend .text-light;
					@extend .bg-dark;
					@extend %scale;
					max-height: 300px;
				}
		}	}
		.valid{ 
			max-height: 0; 
			overflow: hidden;
		}
		.button{
			align-self: flex-end;
			@include normalize(.2rem 0, .5rem 1rem, .1rem solid);
			@extend .border-dark;
			@extend .text-dark;
			text-transform: uppercase;
			&:hover{
				@extend .text-light;
				@extend .bg-dark;
	}	}	}

$animations:
	lineal,
	cuadratica,
	trigonometrica,
	exponencial,
	radical;
@each $name in $animations{
	@keyframes #{$name} {
		$i: 0;
		$x: -20;
		$function: $i;
		@while $i <= 100{
			@if $name == lineal{
				$function: math.div($x, 2);
			} @else if $name == cuadratica {
				$function: math.pow($x, 2);
			} @else if $name == trigonometrica {
				$function: math.cos($x) * 100;
			} @else if $name == exponencial {
				$function: math.pow(1.2, $x);
			} @else{
				$function: math.round( math.div(1, $x + 1));
			}
			#{$i}%{
				transform:
					translate($i+px , $function+px);
			}	
			$i: $i + 5;
			$x: $x + 5;
}	}	}

#mode:not(:checked){
	--ligth:#eee;
	--dark:#333;
}
#mode:checked{
	& + nav,
	& + main,
	& + footer{
	--ligth:#333;
	--dark:#eee;
}	}