// 	Variables
	// Atributos
		$attributes: 
			text 	color,
			bg 		background-color,
			border 	border-color,
			shadow  --box,
			gradient --color;
	// Colores
		$colors:
			primary 	#448,
			secondary 	#c36,
			light 		#eee,
			dark 		#333,
			info 		#36c,
			warning 	#da3,
			danger 		#c33,
			success 	#3c6;
	// Multimedia
		$path: "../assets/icons";
		$social:
			"css",
			"facebook",
			"github",
			"instagram",
			"linkedin",
			"twitter",
			"whatsapp",
			"youtube";
	// Unidades
		$r: .25rem;
		$col: 24;
		$media:
			sm 	 576px 	 540px,
			md 	 768px 	 720px,
			lg 	 992px 	 960px,
			xl 	 1200px  1140px,
			xxl  1400px  1360px; 
// 	Mixins: Estilos anidables
	@mixin normalize ($m:0, $b:0, $p:0, $ma:margin, $ba:border, $pa:padding){
		#{$ma}: $m;
		#{$ba}: $b;
		#{$pa}: $p;
	}
// 	Loops: Repeticion de un procedimiento en base a una condicion
	/*Redes Sociales*/
		@each $ico in $social{ 
			.#{$ico}{ --bg: url("#{$path}/#{$ico}.svg") } 
		}
	/*Attribute Class*/
		@each $prop, $attr in $attributes {
			@each $cn, $cv in $colors{
				.#{$prop}-#{$cn}{ #{$attr}: $cv; }
		}	}
	/*Sistema de Grillas*/
		@for $i from 1 through $col{
			.col-#{$i}{ width: percentage( $i / $col) }
		}
	/*Grilla responsive*/
		@each $vname, $vwidth, $vmax in $media{
			@media screen and (min-width: $vwidth){
				.container, .container-#{$vname}{ max-width: $vmax }
				@for $i from 1 through $col{ .col-#{$vname}-#{$i}{ width: percentage($i / $col) } }
		}	}
// 	Hidden Styles: Estilos cuyos selectores no aparecen en la compilacion
	%hidden{
		max-height: 0;
		overflow: hidden;
	}
	%shown{ 
		@include normalize($p: .5rem);
		max-height: 300px;
	}
	%icon{
		display: inline-block;
		min-width: 3rem;
		min-height: 3rem;
		border-radius: $r;
		background: var(--bg) center/1.5rem no-repeat;
		&:hover{
			background-size: 2.5rem;
		}
	}
// 	Nesting: Capacidad de apilar selectores
	#footer{
		position: relative;
		@include normalize($p: 1rem);
		#contact{
			display: grid;
			@extend .container-md, .text-light, .bg-primary;
			@include normalize(1rem auto, $p: 1rem);
			label{
				margin-top: .5rem;
				@extend %hidden;
				@media screen and (min-width: 768px){
					max-height: 300px;
			}	}
			textarea{
				resize: none;
				min-height: 8rem;
			}
			input,
			textarea{
				font-size: 1rem;
				@include normalize(none, .1rem solid transparent, .25rem .5rem, outline );
				&:focus{ @extend .border-dark;
					& + .valid{ @extend %shown;	}	}
				&:valid{ @extend .border-success;
					& + .valid{ @extend .bg-success; }	}
				&:not(:placeholder-shown):invalid{ @extend .border-danger;
					& + .valid{ @extend .bg-danger;  }	}
			}
			.valid{ @extend .bg-dark, %hidden; }
			.btn{ 
				font: 1rem;
				text-transform: uppercase;
				@include normalize(.2rem 0 1rem auto, .1rem solid, .5rem 1rem);
			}
		}
		.social{
			@extend .container-sm;
			@include normalize(1rem auto 0, .25rem .25rem 0 0, 1rem, $ba:border-radius);
			display: flex;
			justify-content: center;
			background: linear-gradient(var(--light), var(--first));
			a{ @extend %icon; }
		}
		.copy{
			@include normalize(0 -1rem -1rem, center, 1rem, $ba:text-align);
			background: linear-gradient( var(--first), var(--dark));
		}
	}