/* Visualizacion general */
.card,
.prices li,
.flex{
    display: flex;
}
.grid{
    display: grid;
}
.auto{
    grid-template-columns: repeat(auto-fit, minmax(var(--size), 1fr));
    /* EXPLICACION:
        repeat(cant, tama単o)
        - auto-fill: rellena con la cantidad de elementos necesarios segun el espacio disponible
        - auto-fit: estira los elementos segun el espacio disponible para que ocupen todo el contenedor

        minmax(a,b): establece los tama単os minimo y maximo para las columnas del contenedor GRID.
     */
    flex-wrap: wrap;
    gap: 2rem;
}
.auto > * {
    flex: 1 0 min(100%, var(--size));
    /* EXPLICACION:
        flex-grow: indica si el elemento dentro del contenedor flex puede agrandarse
        flex-shrink: indica si el elemento puede reducir su tama単o en caso de ser necesario
        flex-basis: define el tama単o base para los elementos dentro del contenedor flex
    */
}
.small{
    --size: min(100%, 240px);
}
.medium{
    --size: min(100%, 360px);
}
.large{
    --size: min(100%, 480px);
}
/* Productos */
.card{
    position: relative;
    flex-wrap: wrap;
    padding: 1rem;
    border-radius: .5rem;
    box-shadow: 0 0 .5rem #ccc;
    transition: all .5s ease-in-out;
}
.card:hover{
    transform: 
        scale(1.1);
}
.card::before{
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(#eee8, #ccc8);
    transition: all .5s ease-out;
}
.card:hover::before{
    height: 0;
}
.card img{
    width: 100%;
    height: 200px;
    padding: 1rem;
    border-bottom: 1px solid #ccc;
    transform: 
        rotate(-5deg);
    transition: all .25s ease-in;
}
.card:hover img{
    transform: 
        rotate(0);
}
.card p{
    padding: 1.5rem 0 1rem
}
/* Encabezado Producto */
.card p{
    perspective: 200px;
    perspective-origin: top center;
}
.heading{
    display: block;
    padding: 1rem 0;
    text-align: center;
    font-size: min(calc(1.2vw + .5rem), 2rem);
    transition: all 1s ease;
}
.card:hover .heading{
    transform: 
        translateZ(.5rem)
        rotateX(30deg);
}
/* Lista de precios */
.prices{
    width: 100%;
    border-top: 1px solid #ccc;
    padding-top: 1.5rem;
    align-self: flex-end;
}
.prices li{
    font-size: 1.5rem;
    justify-content: space-between;
    align-self: flex-end;
}

/* Transformaciones: 
    2d: son aquellas que utilizan los ejes horizontal (X) y vertical (Y) para cambiar la apariencia o ubicacion de la etiqueta afectada.

    * translate(dX,dY): desplaza la etiqueta relativamente
    * scale(uX, uY): escala la etiqueta en unidades
    * rotate(deg): gira la etiqueta en sentido horario
    * skew(degX, degY): sesga la etiqueta segun el eje

    3d: son aquellas que requieren de una perspectiva, para determinar el punto de fuga que debe utilizarse. Esto implica la implementacion de un eje de profundidad (Z)

    * rotateX(deg): gira el elemento sobre su eje horizontal
    * rotateY(deg): gira el elemento sobre su eje vertical
    * translateZ(dZ): desplaza el elemento sobre el eje de profundidad
*/